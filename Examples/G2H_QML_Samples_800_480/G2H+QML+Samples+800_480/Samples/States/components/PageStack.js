<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>src/meego/PageStack.js in qt-components/qt-components:master - Qt by Digia</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    
      <link href="/dist/bootstrap/css/bootstrap.min.css?1422527558" rel="stylesheet" type="text/css">
      <link href="/dist/bootstrap/css/bootstrap-responsive.min.css?1422527558" rel="stylesheet" type="text/css">
      <link href="/dist/css/gitorious3.min.css?1422527558" rel="stylesheet" type="text/css">
      <link href="/ui3/js/lib/jquery-ui/themes/base/minified/jquery-ui.min.css" rel="stylesheet" type="text/css">
      <link href="/assets/issues/application.css" rel="stylesheet" type="text/css">
      <link href="/stylesheets/sites/qt/qt.css" rel="stylesheet" type="text/css">
    
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
    <script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-52238-3']);
_gaq.push(['_setDomainName', '.gitorious.org'])
_gaq.push(['_trackPageview']);
(function() {
   var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
   ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
   (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script>
  </head>
  <body>
    <div class="page-wrapper">
      <div class="page-content">
        <div class="gts-masthead navbar">
          <div class="navbar-inner">
            <div class="container">
              
              <a href="/" class="gts-logo"><img src="/images/sites/qt/logo.png" alt="Qt by Digia" title="Qt by Digia"></a>
              <ul class="nav">
                <li>
                  <a href="/activities">Activities</a>
                </li>
                <li>
                  <a href="/projects">Projects</a>
                </li>
                <li>
                  <a href="/groups">Teams</a>
                </li>
                <li>
                  <a href="/about">About</a>
                </li>
              </ul>
              <div class="pull-right">
                <form action="/search" class="navbar-search pull-left" method="get">
                  <input type="search" placeholder="Search" class="search-query span2" name="q">
                </form>
                <div class="pull-right btn-group login_button">
                  <a href="/login" class="btn btn-inverse">
                    <i class="icon-user icon-white"></i> Sign in
                  </a>
                </div>
              </div>
            </div>
            

          </div>
        </div>
          <div class="gts-site-header" data-gts-env-repository-view-state-path="/users/view_state/repository/24756.json">
  <div class="container">
    <div class="row">
                <h2 class="span">
            <a href="/qt-components">qt-components</a> /
            <a class="gts-repository-name-ph" href="/qt-components/qt-components">qt-components</a>
          </h2>

    </div>
    <div class="row">
      <div class="span">
                <div class="btn-group gts-repo-urls">
          <a class="btn gts-repo-url active" href="git@gitorious.org:qt-components/qt-components.git">SSH</a>
          <a class="btn gts-repo-url" href="https://gitorious.org/qt-components/qt-components.git">HTTPS</a>
          
          <input class="span4 gts-current-repo-url gts-select-onfocus" type="url" value="git@gitorious.org:qt-components/qt-components.git">
          <button data-toggle="collapse" data-target="#repo-url-help" class="gts-repo-url-help btn">?</button>
        </div>

      </div>
                <div class="pull-right">
                      <a href="/qt-components/qt-components/archive/7d9bf82a089a60429e279d26dc305d34386b7295.tar.gz" class="btn gts-download" rel="tooltip" data-original-title="Download 7d9bf82 as .tar.gz">
            <i class="icon icon-download"></i> Download
          </a>

            <div class="gts-watch-repository-ph gts-placeholder"></div>
            <div class="gts-clone-repository-ph gts-placeholder"></div>
          </div>

    </div>
    <div class="collapse gts-help row" id="repo-url-help">
                <div class="alert alert-info span pull-right">
            <p>
              To <strong>clone</strong> this repository:
            </p>
            <pre class="prettyprint">git clone git@gitorious.org:qt-components/qt-components.git</pre>
            <p>
              To <strong>push</strong> to this repository:
            </p>
            <pre class="prettyprint"># Add a new remote
git remote add origin git@gitorious.org:qt-components/qt-components.git

# Push the master branch to the newly added origin, and configure
# this remote and branch as the default:
git push -u origin master

# From now on you can push master to the "origin" remote with:
git push</pre>
          </div>

    </div>
    <div class="row gts-description">
      <div class="span gts-repository-description-ph">
        
      </div>
    </div>
                <ul class="nav nav-tabs gts-header-nav gts-pjax" data-gts-active="source">
            <li class="active"><a href="/qt-components/qt-components/source/master:">Source code</a></li><li><a href="/qt-components/qt-components/activities">Activities</a></li><li><a href="/qt-components/qt-components/commits/7d9bf82a089a60429e279d26dc305d34386b7295">Commits</a></li><li><a href="/qt-components/qt-components/merge_requests">Merge requests <span class="count gts-mr-count-ph"></span></a></li><li><a href="/qt-components/qt-components/community">Community</a></li>
            <li class="gts-repository-admin-ph gts-placeholder"></li>
            <li class="gts-request-merge-ph gts-placeholder"></li>
          </ul>

  </div>
</div>

          <div class="container gts-body" id="gts-pjax-container">
  <div class="gts-file gts-browser">
    <div class="gts-ref-selector-ph"></div>
    <ul class="pull-right gts-blob-view">
      <li class="active">Blob content</li>
      <li><a href="/qt-components/qt-components/blame/7d9bf82a089a60429e279d26dc305d34386b7295:src/meego/PageStack.js">Blame</a></li>
      <li><a href="/qt-components/qt-components/history/7d9bf82a089a60429e279d26dc305d34386b7295:src/meego/PageStack.js">History</a></li>
      <li><a href="/qt-components/qt-components/raw/7d9bf82a089a60429e279d26dc305d34386b7295:src/meego/PageStack.js">Raw blob</a></li>
    </ul>
              <ul class="breadcrumb">
            <li><a href="/qt-components/qt-components/source/7d9bf82a089a60429e279d26dc305d34386b7295:"><i class="icon icon-file"></i> /</a></li>
            <li><a href="/qt-components/qt-components/source/7d9bf82a089a60429e279d26dc305d34386b7295:src">src<span class="divider">/</span></a></li><li><a href="/qt-components/qt-components/source/7d9bf82a089a60429e279d26dc305d34386b7295:src/meego">meego<span class="divider">/</span></a></li><li class="active">PageStack.js</li>
          </ul>

    <pre class="js prettyprint linenums"><ol class="linenums gts-lines"><li class="L1"><span class="line"><span class="cm">/****************************************************************************</span></span></li><li class="L2"><span class="line"><span class="cm">**</span></span></li><li class="L3"><span class="line"><span class="cm">** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).</span></span></li><li class="L4"><span class="line"><span class="cm">** All rights reserved.</span></span></li><li class="L5"><span class="line"><span class="cm">** Contact: Nokia Corporation (qt-info@nokia.com)</span></span></li><li class="L6"><span class="line"><span class="cm">**</span></span></li><li class="L7"><span class="line"><span class="cm">** This file is part of the Qt Components project.</span></span></li><li class="L8"><span class="line"><span class="cm">**</span></span></li><li class="L9"><span class="line"><span class="cm">** $QT_BEGIN_LICENSE:BSD$</span></span></li><li class="L10"><span class="line"><span class="cm">** You may use this file under the terms of the BSD license as follows:</span></span></li><li class="L11"><span class="line"><span class="cm">**</span></span></li><li class="L12"><span class="line"><span class="cm">** &quot;Redistribution and use in source and binary forms, with or without</span></span></li><li class="L13"><span class="line"><span class="cm">** modification, are permitted provided that the following conditions are</span></span></li><li class="L14"><span class="line"><span class="cm">** met:</span></span></li><li class="L15"><span class="line"><span class="cm">**   * Redistributions of source code must retain the above copyright</span></span></li><li class="L16"><span class="line"><span class="cm">**     notice, this list of conditions and the following disclaimer.</span></span></li><li class="L17"><span class="line"><span class="cm">**   * Redistributions in binary form must reproduce the above copyright</span></span></li><li class="L18"><span class="line"><span class="cm">**     notice, this list of conditions and the following disclaimer in</span></span></li><li class="L19"><span class="line"><span class="cm">**     the documentation and/or other materials provided with the</span></span></li><li class="L20"><span class="line"><span class="cm">**     distribution.</span></span></li><li class="L21"><span class="line"><span class="cm">**   * Neither the name of Nokia Corporation and its Subsidiary(-ies) nor</span></span></li><li class="L22"><span class="line"><span class="cm">**     the names of its contributors may be used to endorse or promote</span></span></li><li class="L23"><span class="line"><span class="cm">**     products derived from this software without specific prior written</span></span></li><li class="L24"><span class="line"><span class="cm">**     permission.</span></span></li><li class="L25"><span class="line"><span class="cm">**</span></span></li><li class="L26"><span class="line"><span class="cm">** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span></span></li><li class="L27"><span class="line"><span class="cm">** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></span></li><li class="L28"><span class="line"><span class="cm">** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR</span></span></li><li class="L29"><span class="line"><span class="cm">** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span></span></li><li class="L30"><span class="line"><span class="cm">** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,</span></span></li><li class="L31"><span class="line"><span class="cm">** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT</span></span></li><li class="L32"><span class="line"><span class="cm">** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,</span></span></li><li class="L33"><span class="line"><span class="cm">** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY</span></span></li><li class="L34"><span class="line"><span class="cm">** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span></span></li><li class="L35"><span class="line"><span class="cm">** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</span></span></li><li class="L36"><span class="line"><span class="cm">** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;</span></span></li><li class="L37"><span class="line"><span class="cm">** $QT_END_LICENSE$</span></span></li><li class="L38"><span class="line"><span class="cm">**</span></span></li><li class="L39"><span class="line"><span class="cm">****************************************************************************/</span></span></li><li class="L40"><span class="line"> </span></li><li class="L41"><span class="line"><span class="c1">// Page stack. Items are page containers.</span></span></li><li class="L42"><span class="line"><span class="kd">var</span> <span class="nx">pageStack</span> <span class="o">=</span> <span class="p">[];</span></span></li><li class="L43"><span class="line"> </span></li><li class="L44"><span class="line"><span class="c1">// Page component cache map. Key is page url, value is page component.</span></span></li><li class="L45"><span class="line"><span class="kd">var</span> <span class="nx">componentCache</span> <span class="o">=</span> <span class="p">{};</span></span></li><li class="L46"><span class="line"> </span></li><li class="L47"><span class="line"><span class="c1">// Returns the page stack depth.</span></span></li><li class="L48"><span class="line"><span class="kd">function</span> <span class="nx">getDepth</span><span class="p">()</span> <span class="p">{</span></span></li><li class="L49"><span class="line">    <span class="k">return</span> <span class="nx">pageStack</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span></span></li><li class="L50"><span class="line"><span class="p">}</span></span></li><li class="L51"><span class="line"> </span></li><li class="L52"><span class="line"><span class="c1">// Pushes a page on the stack.</span></span></li><li class="L53"><span class="line"><span class="kd">function</span> <span class="nx">push</span><span class="p">(</span><span class="nx">page</span><span class="p">,</span> <span class="nx">properties</span><span class="p">,</span> <span class="nx">replace</span><span class="p">,</span> <span class="nx">immediate</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L54"><span class="line">    <span class="c1">// page order sanity check</span></span></li><li class="L55"><span class="line">    <span class="k">if</span> <span class="p">((</span><span class="o">!</span><span class="nx">replace</span> <span class="o">&amp;&amp;</span> <span class="nx">page</span> <span class="o">==</span> <span class="nx">currentPage</span><span class="p">)</span> <span class="o">||</span></span></li><li class="L56"><span class="line">            <span class="p">(</span><span class="nx">replace</span> <span class="o">&amp;&amp;</span> <span class="nx">pageStack</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="nx">page</span> <span class="o">==</span> <span class="nx">pageStack</span><span class="p">[</span><span class="nx">pageStack</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">2</span><span class="p">].</span><span class="nx">page</span><span class="p">))</span> <span class="p">{</span></span></li><li class="L57"><span class="line">        <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Cannot navigate so that the resulting page stack has two consecutive entries of the same page instance.&quot;</span><span class="p">);</span></span></li><li class="L58"><span class="line">    <span class="p">}</span></span></li><li class="L59"><span class="line"> </span></li><li class="L60"><span class="line">    <span class="c1">// if we&#39;re expected to transition, then ignore if there&#39;s an ongoing transition.</span></span></li><li class="L61"><span class="line">    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">immediate</span> <span class="o">&amp;&amp;</span> <span class="nx">__ongoingTransitionCount</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L62"><span class="line">        <span class="k">return</span><span class="p">;</span></span></li><li class="L63"><span class="line">    <span class="p">}</span></span></li><li class="L64"><span class="line"> </span></li><li class="L65"><span class="line">    <span class="c1">// figure out if more than one page is being pushed</span></span></li><li class="L66"><span class="line">    <span class="kd">var</span> <span class="nx">pages</span><span class="p">;</span></span></li><li class="L67"><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">page</span> <span class="k">instanceof</span> <span class="nb">Array</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L68"><span class="line">        <span class="nx">pages</span> <span class="o">=</span> <span class="nx">page</span><span class="p">;</span></span></li><li class="L69"><span class="line">        <span class="nx">page</span> <span class="o">=</span> <span class="nx">pages</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span></span></li><li class="L70"><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nx">page</span><span class="p">.</span><span class="nx">createObject</span> <span class="o">===</span> <span class="kc">undefined</span> <span class="o">&amp;&amp;</span> <span class="nx">page</span><span class="p">.</span><span class="nx">parent</span> <span class="o">===</span> <span class="kc">undefined</span> <span class="o">&amp;&amp;</span> <span class="k">typeof</span> <span class="nx">page</span> <span class="o">!=</span> <span class="s2">&quot;string&quot;</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L71"><span class="line">            <span class="nx">properties</span> <span class="o">=</span> <span class="nx">properties</span> <span class="o">||</span> <span class="nx">page</span><span class="p">.</span><span class="nx">properties</span><span class="p">;</span></span></li><li class="L72"><span class="line">            <span class="nx">page</span> <span class="o">=</span> <span class="nx">page</span><span class="p">.</span><span class="nx">page</span><span class="p">;</span></span></li><li class="L73"><span class="line">        <span class="p">}</span></span></li><li class="L74"><span class="line">    <span class="p">}</span></span></li><li class="L75"><span class="line"> </span></li><li class="L76"><span class="line">    <span class="c1">// get the current container</span></span></li><li class="L77"><span class="line">    <span class="kd">var</span> <span class="nx">oldContainer</span> <span class="o">=</span> <span class="nx">pageStack</span><span class="p">[</span><span class="nx">pageStack</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span></span></li><li class="L78"><span class="line"> </span></li><li class="L79"><span class="line">    <span class="c1">// pop the old container off the stack if this is a replace</span></span></li><li class="L80"><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">oldContainer</span> <span class="o">&amp;&amp;</span> <span class="nx">replace</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L81"><span class="line">        <span class="nx">pageStack</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span></span></li><li class="L82"><span class="line">    <span class="p">}</span></span></li><li class="L83"><span class="line"> </span></li><li class="L84"><span class="line">    <span class="c1">// push any extra defined pages onto the stack</span></span></li><li class="L85"><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">pages</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L86"><span class="line">        <span class="kd">var</span> <span class="nx">i</span><span class="p">;</span></span></li><li class="L87"><span class="line">        <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">pages</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L88"><span class="line">            <span class="kd">var</span> <span class="nx">tPage</span> <span class="o">=</span> <span class="nx">pages</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span></span></li><li class="L89"><span class="line">            <span class="kd">var</span> <span class="nx">tProps</span><span class="p">;</span></span></li><li class="L90"><span class="line">            <span class="k">if</span> <span class="p">(</span><span class="nx">tPage</span><span class="p">.</span><span class="nx">createObject</span> <span class="o">===</span> <span class="kc">undefined</span> <span class="o">&amp;&amp;</span> <span class="nx">tPage</span><span class="p">.</span><span class="nx">parent</span> <span class="o">===</span> <span class="kc">undefined</span> <span class="o">&amp;&amp;</span> <span class="k">typeof</span> <span class="nx">tPage</span> <span class="o">!=</span> <span class="s2">&quot;string&quot;</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L91"><span class="line">                <span class="nx">tProps</span> <span class="o">=</span> <span class="nx">tPage</span><span class="p">.</span><span class="nx">properties</span><span class="p">;</span></span></li><li class="L92"><span class="line">                <span class="nx">tPage</span> <span class="o">=</span> <span class="nx">tPage</span><span class="p">.</span><span class="nx">page</span><span class="p">;</span></span></li><li class="L93"><span class="line">            <span class="p">}</span></span></li><li class="L94"><span class="line">            <span class="nx">pageStack</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">initPage</span><span class="p">(</span><span class="nx">tPage</span><span class="p">,</span> <span class="nx">tProps</span><span class="p">));</span></span></li><li class="L95"><span class="line">        <span class="p">}</span></span></li><li class="L96"><span class="line">    <span class="p">}</span></span></li><li class="L97"><span class="line"> </span></li><li class="L98"><span class="line">    <span class="c1">// initialize the page</span></span></li><li class="L99"><span class="line">    <span class="kd">var</span> <span class="nx">container</span> <span class="o">=</span> <span class="nx">initPage</span><span class="p">(</span><span class="nx">page</span><span class="p">,</span> <span class="nx">properties</span><span class="p">);</span></span></li><li class="L100"><span class="line"> </span></li><li class="L101"><span class="line">    <span class="c1">// push the page container onto the stack</span></span></li><li class="L102"><span class="line">    <span class="nx">pageStack</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">container</span><span class="p">);</span></span></li><li class="L103"><span class="line"> </span></li><li class="L104"><span class="line">    <span class="nx">depth</span> <span class="o">=</span> <span class="nx">pageStack</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span></span></li><li class="L105"><span class="line">    <span class="nx">currentPage</span> <span class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">page</span><span class="p">;</span></span></li><li class="L106"><span class="line"> </span></li><li class="L107"><span class="line">    <span class="c1">// perform page transition</span></span></li><li class="L108"><span class="line">    <span class="nx">immediate</span> <span class="o">=</span> <span class="nx">immediate</span> <span class="o">||</span> <span class="o">!</span><span class="nx">oldContainer</span><span class="p">;</span></span></li><li class="L109"><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">oldContainer</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L110"><span class="line">        <span class="nx">oldContainer</span><span class="p">.</span><span class="nx">pushExit</span><span class="p">(</span><span class="nx">replace</span><span class="p">,</span> <span class="nx">immediate</span><span class="p">);</span></span></li><li class="L111"><span class="line">    <span class="p">}</span></span></li><li class="L112"><span class="line">    <span class="nx">container</span><span class="p">.</span><span class="nx">pushEnter</span><span class="p">(</span><span class="nx">replace</span><span class="p">,</span> <span class="nx">immediate</span><span class="p">);</span></span></li><li class="L113"><span class="line"> </span></li><li class="L114"><span class="line">    <span class="c1">// sync tool bar</span></span></li><li class="L115"><span class="line">    <span class="kd">var</span> <span class="nx">tools</span> <span class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">page</span><span class="p">.</span><span class="nx">tools</span> <span class="o">||</span> <span class="kc">null</span><span class="p">;</span></span></li><li class="L116"><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">toolBar</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L117"><span class="line">        <span class="nx">toolBar</span><span class="p">.</span><span class="nx">setTools</span><span class="p">(</span><span class="nx">tools</span><span class="p">,</span> <span class="nx">immediate</span> <span class="o">?</span> <span class="s2">&quot;set&quot;</span> <span class="o">:</span> <span class="nx">replace</span> <span class="o">?</span> <span class="s2">&quot;replace&quot;</span> <span class="o">:</span> <span class="s2">&quot;push&quot;</span><span class="p">);</span></span></li><li class="L118"><span class="line">    <span class="p">}</span></span></li><li class="L119"><span class="line"> </span></li><li class="L120"><span class="line">    <span class="k">return</span> <span class="nx">container</span><span class="p">.</span><span class="nx">page</span><span class="p">;</span></span></li><li class="L121"><span class="line"><span class="p">}</span></span></li><li class="L122"><span class="line"> </span></li><li class="L123"><span class="line"><span class="c1">// Initializes a page and its container.</span></span></li><li class="L124"><span class="line"><span class="kd">function</span> <span class="nx">initPage</span><span class="p">(</span><span class="nx">page</span><span class="p">,</span> <span class="nx">properties</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L125"><span class="line">    <span class="kd">var</span> <span class="nx">container</span> <span class="o">=</span> <span class="nx">containerComponent</span><span class="p">.</span><span class="nx">createObject</span><span class="p">(</span><span class="nx">root</span><span class="p">);</span></span></li><li class="L126"><span class="line"> </span></li><li class="L127"><span class="line">    <span class="kd">var</span> <span class="nx">pageComp</span><span class="p">;</span></span></li><li class="L128"><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">page</span><span class="p">.</span><span class="nx">createObject</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L129"><span class="line">        <span class="c1">// page defined as component</span></span></li><li class="L130"><span class="line">        <span class="nx">pageComp</span> <span class="o">=</span> <span class="nx">page</span><span class="p">;</span></span></li><li class="L131"><span class="line">    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">page</span> <span class="o">==</span> <span class="s2">&quot;string&quot;</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L132"><span class="line">        <span class="c1">// page defined as string (a url)</span></span></li><li class="L133"><span class="line">        <span class="nx">pageComp</span> <span class="o">=</span> <span class="nx">componentCache</span><span class="p">[</span><span class="nx">page</span><span class="p">];</span></span></li><li class="L134"><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">pageComp</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L135"><span class="line">            <span class="nx">pageComp</span> <span class="o">=</span> <span class="nx">componentCache</span><span class="p">[</span><span class="nx">page</span><span class="p">]</span> <span class="o">=</span> <span class="nx">Qt</span><span class="p">.</span><span class="nx">createComponent</span><span class="p">(</span><span class="nx">page</span><span class="p">);</span></span></li><li class="L136"><span class="line">        <span class="p">}</span></span></li><li class="L137"><span class="line">    <span class="p">}</span></span></li><li class="L138"><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">pageComp</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L139"><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nx">pageComp</span><span class="p">.</span><span class="nx">status</span> <span class="o">==</span> <span class="nx">Component</span><span class="p">.</span><span class="nb">Error</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L140"><span class="line">            <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Error while loading page: &quot;</span> <span class="o">+</span> <span class="nx">pageComp</span><span class="p">.</span><span class="nx">errorString</span><span class="p">());</span></span></li><li class="L141"><span class="line">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span></span></li><li class="L142"><span class="line">            <span class="c1">// instantiate page from component</span></span></li><li class="L143"><span class="line">            <span class="nx">page</span> <span class="o">=</span> <span class="nx">pageComp</span><span class="p">.</span><span class="nx">createObject</span><span class="p">(</span><span class="nx">container</span><span class="p">,</span> <span class="nx">properties</span> <span class="o">||</span> <span class="p">{});</span></span></li><li class="L144"><span class="line">        <span class="p">}</span></span></li><li class="L145"><span class="line">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span></span></li><li class="L146"><span class="line">        <span class="c1">// copy properties to the page</span></span></li><li class="L147"><span class="line">        <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">prop</span> <span class="k">in</span> <span class="nx">properties</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L148"><span class="line">            <span class="k">if</span> <span class="p">(</span><span class="nx">properties</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">prop</span><span class="p">))</span> <span class="p">{</span></span></li><li class="L149"><span class="line">                <span class="nx">page</span><span class="p">[</span><span class="nx">prop</span><span class="p">]</span> <span class="o">=</span> <span class="nx">properties</span><span class="p">[</span><span class="nx">prop</span><span class="p">];</span></span></li><li class="L150"><span class="line">            <span class="p">}</span></span></li><li class="L151"><span class="line">        <span class="p">}</span></span></li><li class="L152"><span class="line">    <span class="p">}</span></span></li><li class="L153"><span class="line"> </span></li><li class="L154"><span class="line">    <span class="nx">container</span><span class="p">.</span><span class="nx">page</span> <span class="o">=</span> <span class="nx">page</span><span class="p">;</span></span></li><li class="L155"><span class="line">    <span class="nx">container</span><span class="p">.</span><span class="nx">owner</span> <span class="o">=</span> <span class="nx">page</span><span class="p">.</span><span class="nx">parent</span><span class="p">;</span></span></li><li class="L156"><span class="line"> </span></li><li class="L157"><span class="line">    <span class="c1">// the page has to be reparented if</span></span></li><li class="L158"><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">page</span><span class="p">.</span><span class="nx">parent</span> <span class="o">!=</span> <span class="nx">container</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L159"><span class="line">        <span class="nx">page</span><span class="p">.</span><span class="nx">parent</span> <span class="o">=</span> <span class="nx">container</span><span class="p">;</span></span></li><li class="L160"><span class="line">    <span class="p">}</span></span></li><li class="L161"><span class="line"> </span></li><li class="L162"><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">page</span><span class="p">.</span><span class="nx">pageStack</span> <span class="o">!==</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L163"><span class="line">        <span class="nx">page</span><span class="p">.</span><span class="nx">pageStack</span> <span class="o">=</span> <span class="nx">root</span><span class="p">;</span></span></li><li class="L164"><span class="line">    <span class="p">}</span></span></li><li class="L165"><span class="line"> </span></li><li class="L166"><span class="line">    <span class="k">return</span> <span class="nx">container</span><span class="p">;</span></span></li><li class="L167"><span class="line"><span class="p">}</span></span></li><li class="L168"><span class="line"> </span></li><li class="L169"><span class="line"><span class="c1">// Pops a page off the stack.</span></span></li><li class="L170"><span class="line"><span class="kd">function</span> <span class="nx">pop</span><span class="p">(</span><span class="nx">page</span><span class="p">,</span> <span class="nx">immediate</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L171"><span class="line">    <span class="c1">// if we&#39;re expected to transition, then ignore if there&#39;s an ongoing transition.</span></span></li><li class="L172"><span class="line">    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">immediate</span> <span class="o">&amp;&amp;</span> <span class="nx">__ongoingTransitionCount</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L173"><span class="line">        <span class="k">return</span><span class="p">;</span></span></li><li class="L174"><span class="line">    <span class="p">}</span></span></li><li class="L175"><span class="line"> </span></li><li class="L176"><span class="line">    <span class="c1">// make sure there are enough pages in the stack to pop</span></span></li><li class="L177"><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">pageStack</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L178"><span class="line">        <span class="c1">// pop the current container off the stack and get the next container</span></span></li><li class="L179"><span class="line">        <span class="kd">var</span> <span class="nx">oldContainer</span> <span class="o">=</span> <span class="nx">pageStack</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span></span></li><li class="L180"><span class="line">        <span class="kd">var</span> <span class="nx">container</span> <span class="o">=</span> <span class="nx">pageStack</span><span class="p">[</span><span class="nx">pageStack</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span></span></li><li class="L181"><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nx">page</span> <span class="o">!==</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L182"><span class="line">            <span class="c1">// an unwind target has been specified - pop until we find it</span></span></li><li class="L183"><span class="line">            <span class="k">while</span> <span class="p">(</span><span class="nx">page</span> <span class="o">!=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">page</span> <span class="o">&amp;&amp;</span> <span class="nx">pageStack</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L184"><span class="line">                <span class="nx">container</span><span class="p">.</span><span class="nx">cleanup</span><span class="p">();</span></span></li><li class="L185"><span class="line">                <span class="nx">pageStack</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span></span></li><li class="L186"><span class="line">                <span class="nx">container</span> <span class="o">=</span> <span class="nx">pageStack</span><span class="p">[</span><span class="nx">pageStack</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">];</span></span></li><li class="L187"><span class="line">            <span class="p">}</span></span></li><li class="L188"><span class="line">        <span class="p">}</span></span></li><li class="L189"><span class="line"> </span></li><li class="L190"><span class="line">        <span class="nx">depth</span> <span class="o">=</span> <span class="nx">pageStack</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span></span></li><li class="L191"><span class="line">        <span class="nx">currentPage</span> <span class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">page</span><span class="p">;</span></span></li><li class="L192"><span class="line"> </span></li><li class="L193"><span class="line">        <span class="c1">// perform page transition</span></span></li><li class="L194"><span class="line">        <span class="nx">oldContainer</span><span class="p">.</span><span class="nx">popExit</span><span class="p">(</span><span class="nx">immediate</span><span class="p">);</span></span></li><li class="L195"><span class="line">        <span class="nx">container</span><span class="p">.</span><span class="nx">popEnter</span><span class="p">(</span><span class="nx">immediate</span><span class="p">);</span></span></li><li class="L196"><span class="line"> </span></li><li class="L197"><span class="line">        <span class="c1">// sync tool bar</span></span></li><li class="L198"><span class="line">        <span class="kd">var</span> <span class="nx">tools</span> <span class="o">=</span> <span class="nx">container</span><span class="p">.</span><span class="nx">page</span><span class="p">.</span><span class="nx">tools</span> <span class="o">||</span> <span class="kc">null</span><span class="p">;</span></span></li><li class="L199"><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nx">toolBar</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L200"><span class="line">            <span class="nx">toolBar</span><span class="p">.</span><span class="nx">setTools</span><span class="p">(</span><span class="nx">tools</span><span class="p">,</span> <span class="nx">immediate</span> <span class="o">?</span> <span class="s2">&quot;set&quot;</span> <span class="o">:</span> <span class="s2">&quot;pop&quot;</span><span class="p">);</span></span></li><li class="L201"><span class="line">        <span class="p">}</span></span></li><li class="L202"><span class="line">        <span class="nx">gc</span><span class="p">();</span></span></li><li class="L203"><span class="line">        <span class="k">return</span> <span class="nx">oldContainer</span><span class="p">.</span><span class="nx">page</span><span class="p">;</span></span></li><li class="L204"><span class="line">    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span></span></li><li class="L205"><span class="line">        <span class="k">return</span> <span class="kc">null</span><span class="p">;</span></span></li><li class="L206"><span class="line">    <span class="p">}</span></span></li><li class="L207"><span class="line"><span class="p">}</span></span></li><li class="L208"><span class="line"> </span></li><li class="L209"><span class="line"><span class="c1">// Clears the page stack.</span></span></li><li class="L210"><span class="line"><span class="kd">function</span> <span class="nx">clear</span><span class="p">()</span> <span class="p">{</span></span></li><li class="L211"><span class="line">    <span class="kd">var</span> <span class="nx">container</span><span class="p">;</span></span></li><li class="L212"><span class="line">    <span class="k">while</span> <span class="p">(</span><span class="nx">container</span> <span class="o">=</span> <span class="nx">pageStack</span><span class="p">.</span><span class="nx">pop</span><span class="p">())</span> <span class="p">{</span></span></li><li class="L213"><span class="line">        <span class="nx">container</span><span class="p">.</span><span class="nx">cleanup</span><span class="p">();</span></span></li><li class="L214"><span class="line">    <span class="p">}</span></span></li><li class="L215"><span class="line">    <span class="nx">depth</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span></span></li><li class="L216"><span class="line">    <span class="nx">currentPage</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span></span></li><li class="L217"><span class="line"><span class="p">}</span></span></li><li class="L218"><span class="line"> </span></li><li class="L219"><span class="line"><span class="c1">// Iterates through all pages in the stack (top to bottom) to find a page.</span></span></li><li class="L220"><span class="line"><span class="kd">function</span> <span class="nx">find</span><span class="p">(</span><span class="nx">func</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L221"><span class="line">    <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="nx">pageStack</span><span class="p">.</span><span class="nx">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span></span></li><li class="L222"><span class="line">        <span class="kd">var</span> <span class="nx">page</span> <span class="o">=</span> <span class="nx">pageStack</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">page</span><span class="p">;</span></span></li><li class="L223"><span class="line">        <span class="k">if</span> <span class="p">(</span><span class="nx">func</span><span class="p">(</span><span class="nx">page</span><span class="p">))</span> <span class="p">{</span></span></li><li class="L224"><span class="line">            <span class="k">return</span> <span class="nx">page</span><span class="p">;</span></span></li><li class="L225"><span class="line">        <span class="p">}</span></span></li><li class="L226"><span class="line">    <span class="p">}</span></span></li><li class="L227"><span class="line">    <span class="k">return</span> <span class="kc">null</span><span class="p">;</span></span></li><li class="L228"><span class="line"><span class="p">}</span></span></li></ol></pre>
  </div>
</div>

      </div>
    </div>
    <div class="footer">
      
<div class="container">
  <p class="pull-right gts-powered-by">
    <a href="http://getgitorious.com">
      <img alt="Powered by Gitorious" src="/assets/poweredby.png" title="Powered by Gitorious">
    </a>
  </p>
  <div class="row-fluid">
      <div class="span3">
        <ul>
          <li><a href="/">Home</a></li>
          <li><a href="/about">About Gitorious</a></li>
          <li><a href="http://qt.digia.com/">Qt by Digia</a></li>
        </ul>
      </div>
      <div class="span3">
        <ul>
          <li><a href="http://en.gitorious.org/tos">Terms of Service</a></li>
          <li><a href="http://en.gitorious.org/privacy_policy">Privacy Policy</a></li>
          <li><a href="http://gitorious.com">Professional Gitorious Services</a></li>
        </ul>
      </div>
      <div class="span3">
        <ul>
          <li><a href="http://en.gitorious.org/security">Security</a></li>
        </ul>
      </div>
  </div>
  <p>
    Gitorious is free software licensed under
    the <a href="http://www.gnu.org/licenses/agpl-3.0.html">GNU Affero
      General Public License (AGPL)</a> unless noted otherwise.
    GIT is a trademark of Software Freedom Conservancy and Gitorious' use of
    "GIT" is under license.
  </p>
  <p class="gts-com-plug">
    <a href="http://gitorious.com">Professional Gitorious services</a> - Git
    hosting at your company, custom features, support and more.
    <a href="http://gitorious.com">gitorious.com</a>.
  </p>
</div>

    </div>
    <script data-gts-env-user-view-state-path="/users/view_state.json"></script>
      <script
        data-gts-env-repository-refs-url="/qt-components/qt-components/refs"
        data-gts-env-commit-url-template="/qt-components/qt-components/commit/#{oid}">
      </script>
      <script src="/dist/js/gitorious3.min.js?1422527558"></script>
      <script src="/ui3/js/lib/jquery-ui/ui/jquery.ui.menu.js"></script>
      <script src="/ui3/js/lib/jquery-ui/ui/jquery.ui.autocomplete.js"></script>
      <script src="/ui3/js/lib/jquery-ui/ui/jquery.ui.datepicker.js"></script>
      <script src="/assets/issues/application.js"></script>
    
    
    
    <script>
      $(function() { $('.alert').append('<a class="close" data-dismiss="alert" href="#">&times;</a>').alert(); });
      gts.enableJS(document.documentElement);
    </script>
  </body>
</html>
